plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.ciputra_patroli"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    // Force SDK 34 and ignore version requirements
    configurations.all {
        resolutionStrategy {
            force 'androidx.core:core-ktx:1.12.0'
            force 'androidx.core:core:1.12.0'
            force 'androidx.activity:activity:1.8.2'
            force 'androidx.fragment:fragment:1.6.2'
            force 'androidx.lifecycle:lifecycle-runtime:2.7.0'
            force 'androidx.lifecycle:lifecycle-viewmodel:2.7.0'
            force 'androidx.lifecycle:lifecycle-common:2.7.0'
            force 'androidx.annotation:annotation:1.7.1'
        }
    }

    // Disable SDK version check
    lintOptions {
        checkReleaseBuilds false
        disable 'InvalidPackage'
        disable 'GradleDependency'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.ciputra_patroli"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.7.4')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.activity:activity:1.8.2'
    implementation 'androidx.fragment:fragment:1.6.2'
    implementation 'androidx.core:core:1.12.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-common:2.7.0'
    implementation 'androidx.annotation:annotation:1.7.1'
}